<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ProjectADataSet7" targetNamespace="http://tempuri.org/ProjectADataSet7.xsd" xmlns:mstns="http://tempuri.org/ProjectADataSet7.xsd" xmlns="http://tempuri.org/ProjectADataSet7.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ProjectAConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ProjectAConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ProjectA.Properties.Settings.GlobalReference.Default.ProjectAConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupEvaluationTableAdapter" GeneratorDataComponentClassName="GroupEvaluationTableAdapter" Name="GroupEvaluation" UserDataComponentName="GroupEvaluationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ProjectAConnectionString (Settings)" DbObjectName="ProjectA.dbo.GroupEvaluation" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupEvaluation] WHERE (([GroupId] = @Original_GroupId) AND ([EvaluationId] = @Original_EvaluationId) AND ([ObtainedMarks] = @Original_ObtainedMarks) AND ([EvaluationDate] = @Original_EvaluationDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EvaluationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EvaluationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ObtainedMarks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObtainedMarks" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EvaluationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EvaluationDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GroupEvaluation] ([GroupId], [EvaluationId], [ObtainedMarks], [EvaluationDate]) VALUES (@GroupId, @EvaluationId, @ObtainedMarks, @EvaluationDate);
SELECT GroupId, EvaluationId, ObtainedMarks, EvaluationDate FROM GroupEvaluation WHERE (EvaluationId = @EvaluationId) AND (GroupId = @GroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EvaluationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EvaluationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ObtainedMarks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObtainedMarks" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EvaluationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EvaluationDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupId, EvaluationId, ObtainedMarks, EvaluationDate FROM dbo.GroupEvaluation</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupEvaluation] SET [GroupId] = @GroupId, [EvaluationId] = @EvaluationId, [ObtainedMarks] = @ObtainedMarks, [EvaluationDate] = @EvaluationDate WHERE (([GroupId] = @Original_GroupId) AND ([EvaluationId] = @Original_EvaluationId) AND ([ObtainedMarks] = @Original_ObtainedMarks) AND ([EvaluationDate] = @Original_EvaluationDate));
SELECT GroupId, EvaluationId, ObtainedMarks, EvaluationDate FROM GroupEvaluation WHERE (EvaluationId = @EvaluationId) AND (GroupId = @GroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EvaluationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EvaluationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ObtainedMarks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObtainedMarks" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EvaluationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EvaluationDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EvaluationId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EvaluationId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ObtainedMarks" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObtainedMarks" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EvaluationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="EvaluationDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="EvaluationId" DataSetColumn="EvaluationId" />
              <Mapping SourceColumn="ObtainedMarks" DataSetColumn="ObtainedMarks" />
              <Mapping SourceColumn="EvaluationDate" DataSetColumn="EvaluationDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ProjectADataSet7" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ProjectADataSet7" msprop:Generator_UserDSName="ProjectADataSet7">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="GroupEvaluation" msprop:Generator_TableClassName="GroupEvaluationDataTable" msprop:Generator_TableVarName="tableGroupEvaluation" msprop:Generator_TablePropName="GroupEvaluation" msprop:Generator_RowDeletingName="GroupEvaluationRowDeleting" msprop:Generator_RowChangingName="GroupEvaluationRowChanging" msprop:Generator_RowEvHandlerName="GroupEvaluationRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupEvaluationRowDeleted" msprop:Generator_UserTableName="GroupEvaluation" msprop:Generator_RowChangedName="GroupEvaluationRowChanged" msprop:Generator_RowEvArgName="GroupEvaluationRowChangeEvent" msprop:Generator_RowClassName="GroupEvaluationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupId" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="EvaluationId" msprop:Generator_ColumnVarNameInTable="columnEvaluationId" msprop:Generator_ColumnPropNameInRow="EvaluationId" msprop:Generator_ColumnPropNameInTable="EvaluationIdColumn" msprop:Generator_UserColumnName="EvaluationId" type="xs:int" />
              <xs:element name="ObtainedMarks" msprop:Generator_ColumnVarNameInTable="columnObtainedMarks" msprop:Generator_ColumnPropNameInRow="ObtainedMarks" msprop:Generator_ColumnPropNameInTable="ObtainedMarksColumn" msprop:Generator_UserColumnName="ObtainedMarks" type="xs:int" />
              <xs:element name="EvaluationDate" msprop:Generator_ColumnVarNameInTable="columnEvaluationDate" msprop:Generator_ColumnPropNameInRow="EvaluationDate" msprop:Generator_ColumnPropNameInTable="EvaluationDateColumn" msprop:Generator_UserColumnName="EvaluationDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupEvaluation" />
      <xs:field xpath="mstns:GroupId" />
      <xs:field xpath="mstns:EvaluationId" />
    </xs:unique>
  </xs:element>
</xs:schema>